/**
*	Authenticates passwords based on S/KEY algorithm
*/

/**
* Member data
*/
	private KEYgen generator;					//The KEYgen used to generate the passwords
	private Vector<String> reference;			//reference list of all known passwords


/**
*  Constructors
*/

	/**
     * Constructor that specifies the generator
     */
    public Constructor KEYauth(KEYgen generator)
        // set generator to provided generator
        // create new Vector for reference
		// copy generator password list into reference
    //end Constructor KEYgen(userIterations)



/**
* Member Functions
*/
	
	/**
	* Determines if a password the user provides was created by the generator
	*/
	public void function authorize(String password)
		// hash password, store in hashPass
		// compare hashPass to last element in reference
		// if match
			// add password to end of reference
			// alert success
		// else, hashes do not match
			// alert failure
		//end if
	// end function authorize
	
	/**
     * Prints the list of reference passwords, one on each line
     */
    public void function printRefList()
        //for all elements in the reference list
            //print out the element on a new line
        //endfor
		
        //print blank line
    //end function printRefList
	